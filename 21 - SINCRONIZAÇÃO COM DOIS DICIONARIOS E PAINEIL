Imports Inventor
Imports System.Windows.Forms
Imports System.Text

Sub Main()
    Dim oDoc As Document = ThisApplication.ActiveDocument

    If oDoc Is Nothing OrElse oDoc.DocumentType <> DocumentTypeEnum.kAssemblyDocumentObject Then
        MessageBox.Show("Abra uma montagem antes de rodar esta regra.", "Documento Inválido", MessageBoxButtons.OK, MessageBoxIcon.Warning)
        Return
    End If

    Dim oAsm As AssemblyDocument = CType(oDoc, AssemblyDocument)

    ' Passo 1: Construir o dicionário completo da montagem pai
    Dim mapaPai As Dictionary(Of String, String) = ObterMapaCompleto(oAsm)

    If mapaPai.Count = 0 Then
        MessageBox.Show("Nenhum item encontrado no BOM estruturado da montagem principal.", "Aviso", MessageBoxButtons.OK, MessageBoxIcon.Information)
        Return
    End If

    ' Passo 2: Sincronizar montagem atual
    Dim mapaLocal As Dictionary(Of String, String) = ObterMapaLocal(oAsm)
    SincronizarItemNumbers(mapaPai, mapaLocal, oAsm)

    ' Passo 3: Sincronizar submontagens recursivamente
    SincronizarSubmontagensRecursivo(oAsm, mapaPai)

    ' Salvar montagem
    Try
        oAsm.Save2(True)
    Catch ex As Exception
        MessageBox.Show("Falha ao salvar o documento: " & oAsm.FullFileName, "Erro", MessageBoxButtons.OK, MessageBoxIcon.Error)
    End Try

    ' Exibir o resultado da renomeação no painel
    Dim textoResultado As String = FormatarMapaParaTexto(mapaPai)
    ShowFormattedResults(textoResultado)

    MessageBox.Show("Sincronização concluída com sucesso!", "Sucesso", MessageBoxButtons.OK, MessageBoxIcon.Information)
End Sub

' === Visualização do resultado em painel ===
Private Sub ShowFormattedResults(message As String)
    Dim form As New System.Windows.Forms.Form
    form.Text = "RESULTADO DA RENOMEAÇÃO"
    form.Width = 1000
    form.Height = 600

    Dim richText As New System.Windows.Forms.RichTextBox
    richText.Dock = System.Windows.Forms.DockStyle.Fill
    richText.ReadOnly = True

    richText.AppendText("RENOMEAÇÃO CONCLUÍDA:" & vbCrLf & vbCrLf)
    richText.AppendText(message)

    form.Controls.Add(richText)
    form.ShowDialog()
End Sub


' === Função para formatar o mapa como string para exibição ===
Private Function FormatarMapaParaTexto(mapa As Dictionary(Of String, String)) As String
    Dim builder As New StringBuilder()

    builder.AppendLine("PART NUMBER".PadRight(50) & "ITEM NUMBER")
    builder.AppendLine(New String("-"c, 80))

    For Each kvp In mapa.OrderBy(Function(x) x.Value)
        builder.AppendLine(kvp.Key.PadRight(50) & kvp.Value)
    Next

    Return builder.ToString()
End Function

' === Construir dicionário completo da montagem pai ===
Private Function ObterMapaCompleto(assemblyDoc As AssemblyDocument) As Dictionary(Of String, String)
    Dim mapa As New Dictionary(Of String, String)(StringComparer.OrdinalIgnoreCase)

    Try
        Dim bom As BOM = assemblyDoc.ComponentDefinition.BOM
        bom.StructuredViewEnabled = True
        bom.StructuredViewFirstLevelOnly = False

        Dim view As BOMView = Nothing
        For Each bv As BOMView In bom.BOMViews
            If bv.ViewType = BOMViewTypeEnum.kStructuredBOMViewType Then
                view = bv
                Exit For
            End If
        Next

        If view Is Nothing Then Return mapa

        For Each row As BOMRow In view.BOMRows
            AdicionarAoMapaRecursivo(Row, mapa)
        Next

    Catch ex As Exception
        MessageBox.Show("Erro ao construir mapa completo: " & ex.Message, "Erro", MessageBoxButtons.OK, MessageBoxIcon.Error)
    End Try

    Return mapa
End Function

' === Adiciona itens ao mapa recursivamente ===
Private Sub AdicionarAoMapaRecursivo(row As BOMRow, mapa As Dictionary(Of String, String))
    Try
        Dim partNumber As String = ""

        If row.ComponentDefinitions.Count > 0 Then
            Dim doc As Document = row.ComponentDefinitions.Item(1).Document
            partNumber = doc.PropertySets.Item("Design Tracking Properties").Item("Part Number").Value.ToString()
        End If

        Dim itemNumber As String = row.ItemNumber

        If partNumber <> "" AndAlso Not mapa.ContainsKey(partNumber) AndAlso itemNumber <> "" Then
            mapa.Add(partNumber, itemNumber)
        End If

        If row.ChildRows IsNot Nothing Then
            For Each childRow As BOMRow In row.ChildRows
                AdicionarAoMapaRecursivo(childRow, mapa)
            Next
        End If

    Catch
        ' Ignora erros individuais
    End Try
End Sub

' === Construir dicionário local da montagem aberta ===
Private Function ObterMapaLocal(assemblyDoc As AssemblyDocument) As Dictionary(Of String, String)
    Dim mapa As New Dictionary(Of String, String)(StringComparer.OrdinalIgnoreCase)

    Try
        Dim bom As BOM = assemblyDoc.ComponentDefinition.BOM
        bom.StructuredViewEnabled = True
        bom.StructuredViewFirstLevelOnly = True

        Dim view As BOMView = Nothing
        For Each bv As BOMView In bom.BOMViews
            If bv.ViewType = BOMViewTypeEnum.kStructuredBOMViewType Then
                view = bv
                Exit For
            End If
        Next

        If view Is Nothing Then Return mapa

        For Each row As BOMRow In view.BOMRows
            Try
                Dim partNumber As String = ""
                If Row.ComponentDefinitions.Count > 0 Then
                    Dim doc As Document = Row.ComponentDefinitions.Item(1).Document
                    partNumber = doc.PropertySets.Item("Design Tracking Properties").Item("Part Number").Value.ToString()
                End If

                Dim itemNumber As String = Row.ItemNumber

                If partNumber <> "" AndAlso Not mapa.ContainsKey(partNumber) AndAlso itemNumber <> "" Then
                    mapa.Add(partNumber, itemNumber)
                End If

            Catch
                ' Ignora erros
            End Try
        Next

    Catch ex As Exception
        MessageBox.Show("Erro ao construir mapa local: " & ex.Message, "Erro", MessageBoxButtons.OK, MessageBoxIcon.Error)
    End Try

    Return mapa
End Function

' === Sincronizar Item Numbers com o mapa pai ===
Private Sub SincronizarItemNumbers(mapaPai As Dictionary(Of String, String), mapaLocal As Dictionary(Of String, String), assemblyDoc As AssemblyDocument)
    Try
        Dim bom As BOM = assemblyDoc.ComponentDefinition.BOM
        bom.StructuredViewEnabled = True
        bom.StructuredViewFirstLevelOnly = True

        Dim view As BOMView = Nothing
        For Each bv As BOMView In bom.BOMViews
            If bv.ViewType = BOMViewTypeEnum.kStructuredBOMViewType Then
                view = bv
                Exit For
            End If
        Next

        If view Is Nothing Then Return

        For Each row As BOMRow In view.BOMRows
            Try
                If Row.ComponentDefinitions.Count > 0 Then
                    Dim doc As Document = Row.ComponentDefinitions.Item(1).Document
                    Dim partNumber As String = doc.PropertySets.Item("Design Tracking Properties").Item("Part Number").Value.ToString()

                    If mapaPai.ContainsKey(partNumber) Then
                        Dim itemNumberPai As String = mapaPai(partNumber)
                        If Row.ItemNumber <> itemNumberPai Then
                            Row.ItemNumber = itemNumberPai
                        End If
                    End If
                End If
            Catch
                ' Ignora erros
            End Try
        Next

        Try
            assemblyDoc.Save2(True)
        Catch
            ' Ignora falha ao salvar
        End Try

    Catch ex As Exception
        MessageBox.Show("Erro ao sincronizar item numbers: " & ex.Message, "Erro", MessageBoxButtons.OK, MessageBoxIcon.Error)
    End Try
End Sub

' === Recursivo: Sincronizar submontagens ===
Private Sub SincronizarSubmontagensRecursivo(parentAsm As AssemblyDocument, mapaPai As Dictionary(Of String, String))
    Try
        For Each occ As ComponentOccurrence In parentAsm.ComponentDefinition.Occurrences
            If occ.DefinitionDocumentType = DocumentTypeEnum.kAssemblyDocumentObject Then
                Try
                    Dim subDoc As Document = Nothing

                    Try
                        subDoc = ThisApplication.Documents.Item(occ.Definition.Document.FullFileName)
                    Catch
                        subDoc = ThisApplication.Documents.Open(occ.Definition.Document.FullFileName, False)
                    End Try

                    Dim subAsm As AssemblyDocument = TryCast(subDoc, AssemblyDocument)
                    If subAsm IsNot Nothing Then
                        Dim mapaLocalSub As Dictionary(Of String, String) = ObterMapaLocal(subAsm)
                        SincronizarItemNumbers(mapaPai, mapaLocalSub, subAsm)

                        Try
                            subAsm.Save2(True)
                        Catch
                            ' Ignora falha ao salvar submontagem
                        End Try

                        SincronizarSubmontagensRecursivo(subAsm, mapaPai)
                    End If
                Catch exInner As Exception
                    MessageBox.Show("Erro ao processar submontagem: " & exInner.Message, "Erro", MessageBoxButtons.OK, MessageBoxIcon.Error)
                End Try
            End If
        Next
    Catch ex As Exception
        MessageBox.Show("Erro ao processar submontagens: " & ex.Message, "Erro", MessageBoxButtons.OK, MessageBoxIcon.Error)
    End Try
End Sub
